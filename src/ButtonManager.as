package src{	import flash.display.*;	import flash.events.*;	import flash.utils.Timer;	//import videoplayer.ScrollBarEvent;	//import co.uk.odeon.microsite.CustomEvent;	public class ButtonManager extends Sprite	{		private var _currentButton:MainButton;		private var _firstButton:MainButton;		private var _videoContainer = new Sprite;		private var j:int = 0;		private var _index:int = 0;		private var _xml:XML;		private var _buttonsArray:Array;		private var _buttonSprite:Sprite;								private var _dummyButton:MainButton;								//private var overButton:VideoThumbnail;		//private var _overTimer:Timer;		private var _introTimerPlaying:Boolean = false;		// Class Constructor		static private  var __instance:ButtonManager;		public function ButtonManager(SingletonEnforcer:SingletonEnforcer)		{			_buttonSprite = new Sprite;			_buttonsArray = new Array;			addChild(_buttonSprite);		}		public static function getInstance():ButtonManager		{			if (ButtonManager.__instance == null)			{				ButtonManager.__instance= new ButtonManager(new SingletonEnforcer);			}			return ButtonManager.__instance;		}		public function createButtons()		{			var upperLimit:int = _xml.*.length() ;									for (var i:int=0; i < upperLimit; i++)			{				var buttons:MainButton = new MainButton(_xml.*[i].@id, _xml.*[i].@title,  _xml.*[i].@videoURL, _xml.*[i].@color);				buttons.x = (buttons.width + 1) * i ;				//buttons.y = stage.stageHeight - buttons.height + 1;				_buttonSprite.addEventListener(MouseEvent.MOUSE_OVER, onOver);				_buttonSprite.addEventListener(MouseEvent.MOUSE_OUT, onOut);				_buttonSprite.addEventListener(MouseEvent.CLICK, clicked);				_buttonsArray.push(buttons);				_buttonSprite.addChild(buttons);			}					}				public function onOver(event:MouseEvent){	event.target.onMouseOver();	}public function onOut(event:MouseEvent){	event.target.onMouseOut();	trace(event.target);}public function clicked(e:MouseEvent):void {			if (_currentButton) {				//_currentButton.addEventListener(MouseEvent.CLICK,clicked);				_currentButton.enabledState();							}			_currentButton = MainButton(e.target);			//_currentButton.removeEventListener(MouseEvent.CLICK,clicked);			_currentButton.disabledState();			HandleButtonClick.getInstance().handler(_currentButton.id, 													_currentButton.buttonName,													_currentButton.videoURL)					}						public function customButtonClick(id:int)		{			var button:MainButton = _buttonsArray[id];			button.dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}				public function enableButtons()		{			//_dummyButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}		public function setButtonArray(xml:XML)		{			_xml = xml;		}		public function positionButtonSprite(xValue:int, yValue:int)		{			_buttonSprite.x = xValue;			_buttonSprite.y = yValue;					}											}// end class}// end packageclass SingletonEnforcer{}