package src{	import flash.display.*;	import flash.text.*;	import flash.events.*;	import flash.geom.ColorTransform;	public class ListItem extends Sprite	{		private var _id:int;		private var _imageURL:String;		private var _videoURL:String;		//private var _label:TextField;		private var _overColor:uint = 0xffffff;//		private var _clickColor:uint = 0x048C2E;		private var _outColor:uint = 0x999999;		private var _txtFormat:TextFormat;		private var _clicked:Boolean = false;		private var _newColorTransform:ColorTransform;		private var _imageLoader:ImageLoader;		private var _tick:Tick;		//private var _tab:TabBar;		//private var 		public function ListItem(id:int, imageURL:String, videoURL:String)		{			//			this.mouseChildren = false;			outline.visible = false;            _tick = new Tick;			_tick.x = -113.5;			_tick.y = 85;						_newColorTransform = new ColorTransform;			_id = id;			_imageURL = imageURL;			_videoURL = videoURL;			loadImage();			buttonMode = true;			mouseEnabled = true;			addEventListener(MouseEvent.MOUSE_OVER, onOver);			addEventListener(MouseEvent.MOUSE_OUT, onOut);			addEventListener(MouseEvent.CLICK,onClick);			addChild(_tick);		}// end constructor		private function loadImage()		{			_imageLoader = new ImageLoader(_imageURL);			_imageLoader.addEventListener(Event.COMPLETE, onImageComplete);		}		private function onImageComplete(event:Event):void		{			_imageSprite.addChild(_imageLoader.getImage());		}		public function onOver(e:MouseEvent):void		{			outline.visible = true;			//trace("OVer")			setBgColor(_overColor);		}// end onOver		public function onOut(e:MouseEvent):void		{			//trace("OUT");			outline.visible = false;			//setBgColor(_outColor)		}// end onOut		public function onClick(e:MouseEvent):void		{			if (!_clicked)			{				outline.visible = true;				setBgColor(_clickColor);				removeEventListener(MouseEvent.MOUSE_OVER, onOver);				removeEventListener(MouseEvent.MOUSE_OUT, onOut);				PlayList.getInstance().addListItem(this);				trace(_tick.width)				_tick.gotoAndPlay(2);				_tick.width = 28;			_tick.height = 25;				_clicked = true;			}			else			{				outline.visible = false;				addEventListener(MouseEvent.MOUSE_OVER, onOver);				addEventListener(MouseEvent.MOUSE_OUT, onOut);				_clicked = false;				PlayList.getInstance().removeListItem(this);				_tick.gotoAndPlay(20);			}		}// end onOut		public function enableButton()		{			outline.visible = false;			addEventListener(MouseEvent.MOUSE_OVER,onOver);			addEventListener(MouseEvent.MOUSE_OUT,onOut);			_clicked = false;			_tick.gotoAndPlay(1);			//_tab.visible = true;			//_buttonBg.removeChild(_tab);		}		/*		public function disabledState():void {				//HandleButtonClick.getInstance().setDisplayObject(_siteContent);		removeEventListener(MouseEvent.MOUSE_OVER,onOver);		removeEventListener(MouseEvent.MOUSE_OUT, onOut);		if(_label.text != "dummyButton")		//VideoPlayer.getInstance().playVideo(_videoURL);		/*dispatchEvent(new CustomEvent(_label.text, CustomEvent.GET_NAME,		true,		false		));*/		/*		trace(_label.text + "Button Clicked");		setBgColor(_overColor);						//setState(_siteContent.overDownColor);		//dot.visible = true;		}						public function getName():String {		return _label.text;		}		public function setBgColor(color:uint):void {		_newColorTransform.color = color;		_buttonBg.transform.colorTransform = _newColorTransform;				}		*/		public function enabledState(color:uint = 0x999999)		{			_clicked = false;			setBgColor(_outColor);		}		public function disabledState(color:uint = 0x999999):void		{			_clicked = true;			setBgColor(_overColor);		}		public function onMouseOver(color:uint = 0x999999):void		{			//this.alpha = 0;			if (!_clicked)			{				setBgColor(_overColor);			}		}// end onOver		public function onMouseOut(color:uint= 0x999999):void		{			//this.alpha = 1;			if (!_clicked)			{				setBgColor(_outColor);			}		}// end onOut		public function setBgColor(color:uint):void		{			_newColorTransform.color = color;			outline.transform.colorTransform = _newColorTransform;		}		public function get id():int		{			return _id;		}		public function get videoURL():String		{			return _videoURL;		}						/*		public function get buttonName():String		   {		   return _label.text;		   }		   		   		   public function get videoURL():String		   {		   return _videoURL;		   }		*/	}// end of launch class}// end package