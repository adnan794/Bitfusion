package src{import flash.events.*;// A class representing the custom "toggle" eventpublic class CustomEventDispatcher extends Event{// A constant for the "toggle" event typepublic static const GET_NAME:String = "getname";public static const GET_ID:String = "getname";public static const STRING:String = "string";// Indicates whether the switch is now on or offpublic var buttonId:int;//public var buttonId:int;// Constructorpublic function CustomEventDispatcher (buttonId:int, type:String, 							 bubbles:Boolean = false, 							 cancelable:Boolean = false){// Pass constructor parameters to the superclass constructorsuper(type, bubbles, cancelable);// Remember the toggle switch's state so it can be accessed within// ToggleEvent.TOGGLE listenersthis.buttonId = buttonId;}// Every custom event class must override clone( )public override function clone( ):Event {return new CustomEventDispatcher(buttonId, type, bubbles, cancelable);}// Every custom event class must override toString( ). Note that// "eventPhase" is an instance variable relating to the event flow.// See Chapter 21.public override function toString( ):String {return formatToString("CustomEventDispatcer", "type", "bubbles","cancelable", "eventPhase", "buttonId");}}}